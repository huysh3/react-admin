{"version":3,"sources":["js/utils.js","store/action.js","components/Slot.js","components/SideBar.js","router/config.js","components/AsyncComponent.js","views/index.js","router/index.js","App.js","Page.js","store/reducer.js","store/index.js","serviceWorker.js","index.js"],"names":["setSessionStore","key","val","window","sessionStorage","setItem","JSON","stringify","getSessionStore","getItem","parse","className","data","compose","join","filter","prop","keys","randomId","len","str","id","index","Math","floor","random","length","toUpperCase","toLowerCase","isNaN","Number","fn","extractData","include","exclude","pick","valKeys","includes","generator","args","arg","doLogin","user","type","updateSidebarState","Slot","this","props","children","Component","SideBar","state","routeName","path","routes","checkActive","bind","generateSidebar","map","item","hasPer","auth","title","active","onClick","toggleMenu","icon","generateSubMenu","each","name","component","to","activeClassName","dispatchSideBar","setState","arr","rName","RegExp","test","per","permissions","Array","isArray","every","some","connect","owns","sidebar","dispatch","withRouter","asyncComponent","importComp","default","C","ApprovalUndo","AsyncComponent","ApprovalDone","CRouter","pipe","generateRoute","flatten","routesConf","render","exact","reg","queryParams","location","hash","match","params","Object","forEach","replace","merge","query","queryString","View","views","wrapperView","requireLogin","permission","username","requirePermission","checkPermission","requirePers","userPers","App","lastname","Login","NotFound","AuthError","Page","push","User","img","isAdmin","initSidebar","generateKey","updateSidebar","reduce","acc","route","combineReducers","action","sidebarInfo","Boolean","hostname","ReactDOM","store","createStore","Reducer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0490c82f.js","sourcesContent":["import { prop, compose, join, filter, keys, pick } from 'ramda'\n\nfunction _curry(fn) {\n    const generator = (...args) => {\n        return args.length >= fn.length ? fn(...args) : (...arg) => generator(...args, ...arg)\n    }\n    return generator\n}\n\nexport const setSessionStore = (key, val) => {\n    window.sessionStorage.setItem(key, JSON.stringify(val))\n}\n\nexport const getSessionStore = key => {\n    const val = window.sessionStorage.getItem(key)\n    return val ? JSON.parse(val) : null\n}\n\nexport const className = data => {\n    const filterFn = key => !!prop(key, data)\n    return compose(join(' '), filter(filterFn), keys)(data)\n}\n\nexport const randomId = len => {\n    const str = 'abcdefghigklmnopqrstuvwxyz0123456789'\n    let id = ''\n    while (len) {\n        const index = Math.floor(Math.random() * Math.floor(str.length))\n        id += index % 2 ? str[index].toUpperCase() : str[index].toLowerCase()\n        len--\n    }\n    return id\n}\n\nexport const isNaN = val => Number.isNaN(val)\n\nfunction _extractData(include, exclude, data) {\n    if(include.length > 0) { // ignore exclude\n        return pick(include, data)\n    } else if(exclude.length > 0) { // ignore include\n        const valKeys = compose(filter(key => !exclude.includes(key)), keys)(data)\n        return pick(valKeys, data)\n    }\n    return data\n}\n\nexport const extractData = _curry(_extractData)","export const doLogin = user => ({\n    type: 'LOGIN',\n    user\n})\n\nexport const updateSidebarState = key => ({\n    type: 'UPDATE',\n    key\n})","/**\n * 插槽\n */\n\n import { Component } from 'react'\n\n class Slot extends Component {\n     render () {\n         return this.props.children\n     }\n }\n\n export default Slot","/**\n * 侧栏导航组件，侧栏按钮在router/config.js配置\n */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport { map, prop, compose, path } from 'ramda'\n\nimport { updateSidebarState } from 'store/action'\nimport { className } from 'js/utils'\nimport Slot from 'components/Slot'\n\nclass SideBar extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            routeName: path(['locaotion', 'pathname'], this.props),\n            routes: compose(this.checkActive.bind(this), prop('sidebar'))(this.props)\n        }\n        this.generateSidebar = this.generateSidebar.bind(this)\n    }\n\n    render () {\n        return (\n            <ul className=\"sidebar-wrapper\">\n                { map(this.generateSidebar, this.state.routes) }\n            </ul>\n        )\n    }\n\n    generateSidebar (item) {\n        return this.hasPer(item.auth) ? <li className=\"sidebar-item\" key={item.title}>\n            <div className={ className({\n                'sidebar-item-name': true,\n                'on': item.active\n            }) } onClick={ this.toggleMenu.bind(this, item.key) }>\n                <span><i className={ className({\n                        'icomoon nav-icon': true,\n                        [item.icon]: !item.active,\n                        [`${item.icon}-fill`]: item.active\n                    }) }></i>\n                    { item.title }\n                </span>\n                <i className={ className({\n                    'icomoon': true,\n                    'icon-right2': !item.active,\n                    'icon-down2': item.active\n                }) }></i>\n            </div>\n            <ul className=\"sidebar-sub\">\n                { this.generateSubMenu(item.routes) }\n            </ul>\n        </li> : null\n    }\n\n    generateSubMenu (routes) {\n        return map(each => this.hasPer(each.auth) ? <li className=\"sidebar-sub-item\" key={ each.name }>\n            { each.component ? <NavLink to={ each.path } activeClassName=\"active\">{ each.name }</NavLink> : (\n                <Slot>\n                    <div className={ className({\n                        'sidebar-item-name': true,\n                        'on': each.active\n                    }) }>\n                        <i className={ className({\n                            'icomoon': true,\n                            'icon-right2': !each.active,\n                            'icon-down2': each.active\n                        }) }></i>\n                        { each.name }\n                    </div>\n                    <ul className=\"sidebar-sub\">\n                        { this.generateSubMenu(each.routes) }\n                    </ul>\n                </Slot>\n            ) }\n        </li> : null, routes)\n    }\n\n    toggleMenu (key) {\n        const { dispatchSideBar } = this.props\n        dispatchSideBar(key)\n        this.setState({\n            routes: prop('sidebar', this.props)\n        })\n    }\n\n    checkActive (arr, routeName='') {\n        const rName = routeName || path(['location', 'pathname'], this.props)\n        return map((each) => {\n            const reg = new RegExp(rName)\n            if(reg.test(each.key)) {\n                each.active = true\n            } else if (each.routes) {\n                each.routes = this.checkActive(each.routes, rName)\n            }\n            return each\n        }, arr)\n    }\n\n    hasPer (per) {\n        const isAdmin = path(['user', 'isAdmin'], this.props)\n        if(isAdmin || !per) return true\n        const permissions = path(['user', 'permission'], this.props)\n        if(typeof permissions === 'undefined') return false\n        if(Array.isArray(per)) {\n            return per.every(each => permissions.includes(each))\n        } else if(per instanceof RegExp) {\n            return permissions.some(each => per.test(each))\n        }\n        return permissions.includes(per)\n    }\n}\n\nconst mapStateToProps = (state, owns) => ({\n    user: prop('user', state),\n    sidebar: prop('sidebarInfo', state),\n    ...owns\n})\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSideBar: sidebar => dispatch(updateSidebarState(sidebar))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(SideBar))","export default [\n    {\n        title: '我的事务', // 页面标题&一级nav标题\n        icon: 'icon-home',\n        routes: [{\n            name: '待审批',\n            path: '/front/approval/undo',\n            component: 'ApprovalUndo'\n        }, {\n            name: '已处理',\n            path: '/front/approval/done',\n            auth: 'add',\n            component: 'ApprovalDone'\n        }]\n    }\n]","import React, { Component } from 'react'\n\nexport default function asyncComponent (importComp) {\n    class AsyncComponent extends Component {\n        constructor (props) {\n            super(props)\n    \n            this.state = {\n                component: null\n            }\n        }\n\n        async componentDidMount () {\n            const { default: component } = await importComp()\n            this.setState({\n                component: component\n            })\n        }\n\n        render () {\n            const C = this.state.component\n\n            return C ? <C {...this.props} /> : null\n        }\n    }\n\n    return AsyncComponent\n}","import AsyncComponent from 'components/AsyncComponent'\n\nconst ApprovalUndo = AsyncComponent(() => import(/* webpackChunkName: \"approvalundo\" */ 'views/approval/undo'))\nconst ApprovalDone = AsyncComponent(() => import(/* webpackChunkName: \"approvaldone\" */ 'views/approval/done'))\n\nexport default {\n    ApprovalUndo, ApprovalDone\n}","import React, {Component } from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport DocumentTitle from 'react-document-title'\nimport queryString from 'query-string'\nimport { connect } from 'react-redux'\nimport { pipe, map, flatten, prop, path} from 'ramda'\n\nimport routesConf from './config'\nimport views from 'views'\n\nclass CRouter extends Component {\n    render () {\n        return (\n            <Switch>\n                { pipe(map(each => {\n                    const routes = each.routes\n                    return this.generateRoute(routes, each.title)\n                }), flatten)(routesConf) }\n                <Route render={ () => <Redirect to=\"/front/404\" /> } />\n            </Switch>\n        )\n    }\n\n    generateRoute (routes=[], title='React Admin') {\n        return map(each => each.component ? (\n            <Route \n                key={ each.path }\n                exact  // 精确匹配路由\n                path={ each.path }\n                render={ props => {\n                    const reg = /\\?\\S*g/\n                    const queryParams = window.location.hash.match(reg)  // 匹配路由参数\n                    const { params } = props.match\n                    Object.keys(params).forEach(key => { // 去除?参数\n                        params[key] = params[key] && params[key].replace(reg, '')\n                    })\n                    props.match.params = { ...params }\n                    const merge = { ...props, query: queryParams ? queryString.parse(queryParams[0]) : {} }\n                    const View = views[each.component]\n                    const wrapperView = ( // 包装组件设置标签页标题\n                        <DocumentTitle title={ title }>\n                            <View { ...merge } />\n                        </DocumentTitle>\n                    )\n                    return this.requireLogin(wrapperView, each.auth)\n                } }\n            />\n        ) : this.generateRoute(each.routes, title), routes)\n    }\n\n    requireLogin (component, permission) {\n        const { user } = this.props\n        const isLogin = user.username || false  // 登录标识, 从redux取\n        if(!isLogin) { // 判断是否登录\n            return <Redirect to={'/front/login'} />\n        }\n        return permission ? this.requirePermission(component, permission) : component\n    }\n\n    requirePermission (component, permission) {\n        const permissions = path(['user', 'permission'], this.props) // 用户权限, 从redux取\n        if(!permissions || !this.checkPermission(permission, permissions)) return <Redirect to=\"/front/autherror\" />\n        return component\n    }\n\n    checkPermission (requirePers, userPers) {\n        const isAdmin = path(['user', 'isAdmin'], this.props) // // 超管标识, 从redux取\n        if(isAdmin) return true\n        if(typeof userPers === 'undefined') return false\n        if(Array.isArray(requirePers)) { // 路由权限为数组\n            return requirePers.every(each => userPers.includes(each))\n        } else if(requirePers instanceof RegExp) { // 路由权限设置为正则\n            return userPers.some(each => requirePers.test(each))\n        }\n        return userPers.includes(requirePers)  // 路由设置为字符串\n    }\n}\n\nconst mapStateToProps = (state, owns) => ({\n    user: prop('user', state),\n    ...owns\n})\n\nexport default connect(\n    mapStateToProps\n)(CRouter)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { prop } from 'ramda'\n\nimport SideBar from 'components/SideBar'\nimport Routers from 'router'\n\nclass App extends Component {\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<section className=\"sidebar\">\n\t\t\t\t\t<SideBar />\n\t\t\t\t</section>\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<header className=\"header\">\n\t\t\t\t\t\t<span className=\"username\">Hi, { this.props.user.lastname }</span>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<Routers />\n\t\t\t\t\t</div>\n\t\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\t\t<span className=\"copyright\">Copyright@2019 安歌</span>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state, owns) => ({\n\tuser: prop('user', state),\n\t...owns\n})\n\nexport default connect(\n\tmapStateToProps\n)(App)","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport App from 'App'\nimport AsyncComponent from 'components/AsyncComponent'\n\nconst Login = AsyncComponent(() => import(/* webpackChunkName: \"login\" */ 'views/login'))\nconst NotFound = AsyncComponent(() => import(/* webpackChunkName: \"404\" */ 'components/404'))\nconst AuthError = AsyncComponent(() => import(/* webpackChunkName: \"autherror\" */ 'components/AuthError'))\n\nclass Page extends Component {\n    render () {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={ () => <Redirect to=\"/front/approval/undo\" push /> } />\n                    <Route path=\"/front/404\" component={ NotFound }/>\n                    <Route path=\"/front/autherror\" component={ AuthError } />\n                    <Route path=\"/front/login\" render={ () => {\n                        const isLogin = this.props.user.username\n                        return isLogin ?  <Redirect to=\"/front/approval/undo\" /> : <Login />\n                    } } />\n                    <Route render={ () => <App /> } />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = (state, owns) => ({\n    user: state.user,\n    ...owns\n})\n\nexport default connect(\n    mapStateToProps\n)(Page)","import { map, reduce, pick, keys } from 'ramda'\nimport routes from 'router/config'\nimport { getSessionStore } from 'js/utils'\n\n// user初始值，取自sessionStorage\nconst User = getSessionStore('user') || {\n    username: '',\n    lastname: '',\n    img: '',\n    permission: [],\n    isAdmin: false\n}\n\nexport const user = (state=User, action) => {\n    switch (action.type) {\n        case 'LOGIN': \n            return pick(keys(state), action.user)\n        default:\n            return state\n    }\n}\n\nconst initSidebar = arr => {\n    return map(each => {\n        if(each.routes) {\n            each.active = false\n            each.key = generateKey(each.routes)\n            each.routes = initSidebar(each.routes)\n        }\n        return each\n    }, arr)\n}\n\nconst updateSidebar = (arr, key='') => {\n    return map(each => {\n        if(key === each.key) {\n            each.active = !!!each.active\n        } else if(each.routes) {\n            each.routes = updateSidebar(each.routes, key)\n        }\n        return each\n    }, arr)\n}\n\nconst generateKey = arr => {\n    return reduce((acc, route) => {\n        if(route.routes) {\n            acc += generateKey(route.routes)\n        } else {\n            acc += route.path\n        }\n        return acc\n    }, '', arr)\n}\n\nexport const sidebarInfo = (state=initSidebar(routes), action) => {\n    switch (action.type) {\n        case 'UPDATE':\n            return updateSidebar(state, action.key)\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\n\nimport { user, sidebarInfo } from './reducer'\n\nexport default combineReducers({\n    user,\n    sidebarInfo\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from  'redux'\nimport { Provider } from 'react-redux'\nimport 'scss/common.scss'\nimport 'scss/index.scss'\nimport Page from 'Page'\nimport Reducer from 'store'\nimport * as serviceWorker from './serviceWorker'\nReactDOM.render(\n    <Provider store= { createStore(Reducer) }>\n        <Page />\n    </Provider>,\ndocument.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}